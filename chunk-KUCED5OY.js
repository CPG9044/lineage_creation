var r=Object.create;var k=Object.defineProperty,s=Object.defineProperties,t=Object.getOwnPropertyDescriptor,u=Object.getOwnPropertyDescriptors,v=Object.getOwnPropertyNames,j=Object.getOwnPropertySymbols,p=Object.getPrototypeOf,n=Object.prototype.hasOwnProperty,q=Object.prototype.propertyIsEnumerable,w=Reflect.get;var m=(b,a)=>(a=Symbol[b])?a:Symbol.for("Symbol."+b),x=b=>{throw TypeError(b)};var o=(b,a,c)=>a in b?k(b,a,{enumerable:!0,configurable:!0,writable:!0,value:c}):b[a]=c,A=(b,a)=>{for(var c in a||={})n.call(a,c)&&o(b,c,a[c]);if(j)for(var c of j(a))q.call(a,c)&&o(b,c,a[c]);return b},B=(b,a)=>s(b,u(a));var C=(b=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(b,{get:(a,c)=>(typeof require<"u"?require:a)[c]}):b)(function(b){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+b+'" is not supported')}),D=b=>a=>{var c=b[a];if(c)return c();throw new Error("Module not found in bundle: "+a)};var E=(b,a)=>{var c={};for(var d in b)n.call(b,d)&&a.indexOf(d)<0&&(c[d]=b[d]);if(b!=null&&j)for(var d of j(b))a.indexOf(d)<0&&q.call(b,d)&&(c[d]=b[d]);return c};var F=(b,a)=>()=>(a||b((a={exports:{}}).exports,a),a.exports),G=(b,a)=>{for(var c in a)k(b,c,{get:a[c],enumerable:!0})},y=(b,a,c,d)=>{if(a&&typeof a=="object"||typeof a=="function")for(let e of v(a))!n.call(b,e)&&e!==c&&k(b,e,{get:()=>a[e],enumerable:!(d=t(a,e))||d.enumerable});return b};var H=(b,a,c)=>(c=b!=null?r(p(b)):{},y(a||!b||!b.__esModule?k(c,"default",{value:b,enumerable:!0}):c,b));var I=(b,a,c)=>w(p(b),c,a);var J=(b,a,c)=>new Promise((d,e)=>{var f=g=>{try{i(c.next(g))}catch(l){e(l)}},h=g=>{try{i(c.throw(g))}catch(l){e(l)}},i=g=>g.done?d(g.value):Promise.resolve(g.value).then(f,h);i((c=c.apply(b,a)).next())}),z=function(b,a){this[0]=b,this[1]=a};var K=b=>{var a=b[m("asyncIterator")],c=!1,d,e={};return a==null?(a=b[m("iterator")](),d=f=>e[f]=h=>a[f](h)):(a=a.call(b),d=f=>e[f]=h=>{if(c){if(c=!1,f==="throw")throw h;return h}return c=!0,{done:!1,value:new z(new Promise(i=>{var g=a[f](h);g instanceof Object||x("Object expected"),i(g)}),1)}}),e[m("iterator")]=()=>e,d("next"),"throw"in a?d("throw"):e.throw=f=>{throw f},"return"in a&&d("return"),e};export{A as a,B as b,C as c,D as d,E as e,F as f,G as g,H as h,I as i,J as j,K as k};
